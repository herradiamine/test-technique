name: CI/CD

on:
  push:
    branches: [main, master]
  pull_request:
    branches: [main, master]

jobs:
  backend:
    name: Backend FastAPI
    runs-on: ubuntu-latest
    services:
      postgres:
        image: postgres:15
        env:
          POSTGRES_USER: test
          POSTGRES_PASSWORD: test
          POSTGRES_DB: test_db
        ports:
          - 5432:5432
        options: >-
          --health-cmd="pg_isready -U test" --health-interval=10s --health-timeout=5s --health-retries=5
    env:
      DATABASE_URL: postgresql://test:test@localhost:5432/test_db
    steps:
      - name: 🛎️ Checkout du code
        uses: actions/checkout@v4
      - name: 🐍 Installation de Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.11'
      - name: 📦 Installation des dépendances backend
        run: |
          cd backend
          python -m pip install --upgrade pip
          pip install -r requirements.txt
      - name: 🧪 Lancement des tests backend (pytest)
        run: |
          cd backend
          pytest
      - name: 🐳 Build de l'image Docker backend
        run: |
          cd backend
          docker build -t backend-test .

  frontend:
    name: Frontend React
    runs-on: ubuntu-latest
    steps:
      - name: 🛎️ Checkout du code
        uses: actions/checkout@v4
      - name: 🟢 Installation de Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
      - name: 📦 Installation des dépendances frontend
        run: |
          cd frontend
          npm ci
      - name: 🧪 Lancement des tests frontend
        run: |
          cd frontend
          npm test -- --watchAll=false || true # ignore l'échec si pas de tests
      - name: 🧹 Vérification du lint frontend
        run: |
          cd frontend
          npm run lint
      - name: 🏗️ Build du frontend
        run: |
          cd frontend
          npm run build
      - name: 🐳 Build de l'image Docker frontend
        run: |
          cd frontend
          docker build -t frontend-test . 